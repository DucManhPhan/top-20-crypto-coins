name: Main CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

jobs:
  # Call test workflow
  test:
    uses: ./.github/workflows/test.yml

  # Call code quality workflow  
  code-quality:
    uses: ./.github/workflows/code-quality.yml

  # Deploy infrastructure (only on main branch or manual dispatch)
  terraform:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: [test, code-quality]
    uses: ./.github/workflows/terraform.yml
    with:
      action: ${{ github.event.inputs.action || 'apply' }}
      environment: 'prod'
    secrets: inherit

  # Integration tests (only after successful deployment)
  integration-test:
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
    needs: terraform
    uses: ./.github/workflows/integration-test.yml
    secrets: inherit

  # Summary job
  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [test, code-quality, terraform, integration-test]
    if: always()
    
    steps:
    - name: Pipeline Status
      run: |
        echo "üöÄ CI/CD Pipeline Results:"
        echo "- Tests: ${{ needs.test.result }}"
        echo "- Code Quality: ${{ needs.code-quality.result }}"
        
        # Show terraform and integration test results if they ran
        TERRAFORM_RESULT="${{ needs.terraform.result }}"
        INTEGRATION_RESULT="${{ needs.integration-test.result }}"
        
        if [ "$TERRAFORM_RESULT" != "" ]; then
          echo "- Terraform: $TERRAFORM_RESULT"
        else
          echo "- Terraform: skipped"
        fi
        
        if [ "$INTEGRATION_RESULT" != "" ]; then
          echo "- Integration Tests: $INTEGRATION_RESULT"
        else
          echo "- Integration Tests: skipped"
        fi
        
        # Fail if any job that ran failed
        FAILED=false
        if [ "${{ needs.test.result }}" == "failure" ]; then
          echo "‚ùå Tests failed"
          FAILED=true
        fi
        if [ "${{ needs.code-quality.result }}" == "failure" ]; then
          echo "‚ùå Code quality checks failed"
          FAILED=true
        fi
        if [ "$TERRAFORM_RESULT" == "failure" ]; then
          echo "‚ùå Terraform failed"
          FAILED=true
        fi
        if [ "$INTEGRATION_RESULT" == "failure" ]; then
          echo "‚ùå Integration tests failed"
          FAILED=true
        fi
        
        if [ "$FAILED" == "true" ]; then
          echo "‚ùå Pipeline failed"
          exit 1
        else
          echo "‚úÖ Pipeline completed successfully"
        fi